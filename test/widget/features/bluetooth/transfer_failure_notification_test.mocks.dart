// Mocks generated by Mockito 5.4.5 from annotations
// in projects/test/widget/features/bluetooth/transfer_failure_notification_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;
import 'package:projects/features/bluetooth/platform/bluetooth_platform.dart'
    as _i4;
import 'package:projects/features/bluetooth/providers/bluetooth_provider.dart'
    as _i2;
import 'package:projects/features/bluetooth/services/ble_data_service.dart'
    as _i11;
import 'package:projects/features/bluetooth/services/bluetooth_file_service.dart'
    as _i12;
import 'package:projects/features/presets/models/preset.dart' as _i8;
import 'package:projects/features/presets/providers/preset_provider.dart'
    as _i7;
import 'package:projects/features/sound_test/models/sound_test.dart' as _i10;
import 'package:projects/features/sound_test/providers/sound_test_provider.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BluetoothProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockBluetoothProvider extends _i1.Mock implements _i2.BluetoothProvider {
  @override
  bool get isDeviceConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isDeviceConnected),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isBluetoothEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#isBluetoothEnabled),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  String get connectedDeviceName =>
      (super.noSuchMethod(
            Invocation.getter(#connectedDeviceName),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#connectedDeviceName),
            ),
            returnValueForMissingStub: _i3.dummyValue<String>(
              this,
              Invocation.getter(#connectedDeviceName),
            ),
          )
          as String);

  @override
  bool get isScanning =>
      (super.noSuchMethod(
            Invocation.getter(#isScanning),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  List<_i4.BluetoothDevice> get scanResults =>
      (super.noSuchMethod(
            Invocation.getter(#scanResults),
            returnValue: <_i4.BluetoothDevice>[],
            returnValueForMissingStub: <_i4.BluetoothDevice>[],
          )
          as List<_i4.BluetoothDevice>);

  @override
  _i4.BluetoothAudioType get audioType =>
      (super.noSuchMethod(
            Invocation.getter(#audioType),
            returnValue: _i4.BluetoothAudioType.none,
            returnValueForMissingStub: _i4.BluetoothAudioType.none,
          )
          as _i4.BluetoothAudioType);

  @override
  bool get isUsingLEAudio =>
      (super.noSuchMethod(
            Invocation.getter(#isUsingLEAudio),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i5.Future<void> saveConnectionState() =>
      (super.noSuchMethod(
            Invocation.method(#saveConnectionState, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadConnectionState() =>
      (super.noSuchMethod(
            Invocation.method(#loadConnectionState, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> refreshBatteryLevel() =>
      (super.noSuchMethod(
            Invocation.method(#refreshBatteryLevel, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateConnectionFromDevice(
    _i4.BluetoothDevice? device,
    _i4.BluetoothAudioType? audioType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateConnectionFromDevice, [device, audioType]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> forceAudioRouting() =>
      (super.noSuchMethod(
            Invocation.method(#forceAudioRouting, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void setBypassMode(bool? bypass) => super.noSuchMethod(
    Invocation.method(#setBypassMode, [bypass]),
    returnValueForMissingStub: null,
  );

  @override
  void setBypassBluetoothCheck(bool? bypass) => super.noSuchMethod(
    Invocation.method(#setBypassBluetoothCheck, [bypass]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> startScan() =>
      (super.noSuchMethod(
            Invocation.method(#startScan, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> stopScan() =>
      (super.noSuchMethod(
            Invocation.method(#stopScan, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> checkBluetoothConnection() =>
      (super.noSuchMethod(
            Invocation.method(#checkBluetoothConnection, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> registerDevice(_i4.BluetoothDevice? device) =>
      (super.noSuchMethod(
            Invocation.method(#registerDevice, [device]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> connectToDevice(_i4.BluetoothDevice? device) =>
      (super.noSuchMethod(
            Invocation.method(#connectToDevice, [device]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> disconnectDevice() =>
      (super.noSuchMethod(
            Invocation.method(#disconnectDevice, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deregisterDevice() =>
      (super.noSuchMethod(
            Invocation.method(#deregisterDevice, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> connectViaSystemSettings() =>
      (super.noSuchMethod(
            Invocation.method(#connectViaSystemSettings, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> reconnectDevice() =>
      (super.noSuchMethod(
            Invocation.method(#reconnectDevice, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> verifyAudioConnection() =>
      (super.noSuchMethod(
            Invocation.method(#verifyAudioConnection, []),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PresetProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPresetProvider extends _i1.Mock implements _i7.PresetProvider {
  @override
  Map<String, _i8.Preset> get presets =>
      (super.noSuchMethod(
            Invocation.getter(#presets),
            returnValue: <String, _i8.Preset>{},
            returnValueForMissingStub: <String, _i8.Preset>{},
          )
          as Map<String, _i8.Preset>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  Map<String, bool> get dropdownStates =>
      (super.noSuchMethod(
            Invocation.getter(#dropdownStates),
            returnValue: <String, bool>{},
            returnValueForMissingStub: <String, bool>{},
          )
          as Map<String, bool>);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i5.Future<void> fetchPresets() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPresets, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> createPreset(_i8.Preset? preset) =>
      (super.noSuchMethod(
            Invocation.method(#createPreset, [preset]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updatePreset(_i8.Preset? preset) =>
      (super.noSuchMethod(
            Invocation.method(#updatePreset, [preset]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deletePreset(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePreset, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void setActivePreset(String? id) => super.noSuchMethod(
    Invocation.method(#setActivePreset, [id]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<bool> sendActivePresetToDevice() =>
      (super.noSuchMethod(
            Invocation.method(#sendActivePresetToDevice, []),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> sendCombinedDataToDevice(
    _i9.SoundTestProvider? soundTestProvider,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#sendCombinedDataToDevice, [soundTestProvider]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void clearActivePreset() => super.noSuchMethod(
    Invocation.method(#clearActivePreset, []),
    returnValueForMissingStub: null,
  );

  @override
  void toggleDropdown(String? id, [bool? isOpen]) => super.noSuchMethod(
    Invocation.method(#toggleDropdown, [id, isOpen]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Preset? getPresetById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPresetById, [id]),
            returnValueForMissingStub: null,
          )
          as _i8.Preset?);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadPresets() =>
      (super.noSuchMethod(
            Invocation.method(#loadPresets, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SoundTestProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSoundTestProvider extends _i1.Mock implements _i9.SoundTestProvider {
  @override
  Map<String, _i10.SoundTest> get soundTests =>
      (super.noSuchMethod(
            Invocation.getter(#soundTests),
            returnValue: <String, _i10.SoundTest>{},
            returnValueForMissingStub: <String, _i10.SoundTest>{},
          )
          as Map<String, _i10.SoundTest>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i5.Future<void> fetchSoundTests() =>
      (super.noSuchMethod(
            Invocation.method(#fetchSoundTests, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> createSoundTest(_i10.SoundTest? soundTest) =>
      (super.noSuchMethod(
            Invocation.method(#createSoundTest, [soundTest]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateSoundTest(_i10.SoundTest? soundTest) =>
      (super.noSuchMethod(
            Invocation.method(#updateSoundTest, [soundTest]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetSoundTest(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#resetSoundTest, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void setActiveSoundTest(String? id) => super.noSuchMethod(
    Invocation.method(#setActiveSoundTest, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void clearActiveSoundTest() => super.noSuchMethod(
    Invocation.method(#clearActiveSoundTest, []),
    returnValueForMissingStub: null,
  );

  @override
  _i10.SoundTest? getSoundTestById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSoundTestById, [id]),
            returnValueForMissingStub: null,
          )
          as _i10.SoundTest?);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [BLEDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBLEDataService extends _i1.Mock implements _i11.BLEDataService {
  @override
  _i5.Future<bool> sendHearingTestData(_i10.SoundTest? soundTest) =>
      (super.noSuchMethod(
            Invocation.method(#sendHearingTestData, [soundTest]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> sendPresetData(_i8.Preset? preset) =>
      (super.noSuchMethod(
            Invocation.method(#sendPresetData, [preset]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> sendCombinedData(
    _i10.SoundTest? soundTest,
    _i8.Preset? preset,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#sendCombinedData, [soundTest, preset]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  Map<String, dynamic> calculateCombinedValues(
    _i10.SoundTest? soundTest,
    _i8.Preset? preset,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#calculateCombinedValues, [soundTest, preset]),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i5.Future<bool> isReadyForTransmission() =>
      (super.noSuchMethod(
            Invocation.method(#isReadyForTransmission, []),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}

/// A class which mocks [BluetoothFileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBluetoothFileService extends _i1.Mock
    implements _i12.BluetoothFileService {
  @override
  _i5.Future<bool> sendHearingTestFile(_i10.SoundTest? soundTest) =>
      (super.noSuchMethod(
            Invocation.method(#sendHearingTestFile, [soundTest]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> sendPresetFile(_i8.Preset? preset) =>
      (super.noSuchMethod(
            Invocation.method(#sendPresetFile, [preset]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<bool> sendCombinedHearingTestWithPreset(
    _i10.SoundTest? soundTest,
    _i8.Preset? preset,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#sendCombinedHearingTestWithPreset, [
              soundTest,
              preset,
            ]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}
